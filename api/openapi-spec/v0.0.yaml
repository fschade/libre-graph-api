openapi: 3.0.1
info:
  title: Libre Graph API
  version: v0.3.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://ocis.ocis-traefik.latest.owncloud.works/
    description: ownCloud Infinite Scale Latest
paths:
  /me/drives:
    get:
      tags:
        - me.drives
      summary: Get drives from me
      operationId: ListMyDrives
      parameters:
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - createdByUser
                - lastModifiedByUser
                - root
              type: string
            maxItems: 18
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - root
              type: string
            maxItems: 2
      responses:
        '200':
          description: Retrieved spaces
          content:
            application/json:
              schema:
                title: Collection of drives
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/drive'
                    maxItems: 100
                  '@odata.nextLink':
                    type: string
          links:
            root:
              operationId: HomeGetRoot
        default:
          $ref: '#/components/responses/error'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
        operationName: listMore
      x-ms-docs-operation-type: operation
  '/drives':
    post:
      tags:
        - drives
      summary: Create a new space of a specific type
      operationId: CreateDrive
      requestBody:
        description: New space property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/drive'
        required: true
      responses:
        '201':
          description: Created
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/drives/{drive-id}':
    get:
      tags:
        - drives
      summary: Get drive by id
      operationId: GetDrive
      parameters:
        - name: drive-id
          in: path
          description: 'key: id of drive'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: drive
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - createdBy
                - createdDateTime
                - description
                - eTag
                - lastModifiedBy
                - lastModifiedDateTime
                - name
                - parentReference
                - webUrl
                - driveType
                - owner
                - quota
                - createdByUser
                - lastModifiedByUser
                - root
              type: string
            maxItems: 18
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - root
              type: string
            maxItems: 2
      responses:
        '200':
          description: Retrieved space
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/drive'
          links:
            root:
              operationId: GetRoot
              parameters:
                drive-id: $request.path.drive-id
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - drives
      summary: Update the space
      operationId: UpdateDrive
      parameters:
        - name: drive-id
          in: path
          description: 'key: id of drive'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: drive
      requestBody:
        description: New space values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/drive'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - drives
      summary: Delete a specific space
      operationId: DeleteDrive
      parameters:
        - name: drive-id
          in: path
          description: 'key: id of drive'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: drive
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/drives/{drive-id}/root':
    get:
      tags:
        - drives.root
      summary: Get root from arbitrary space
      operationId: GetRoot
      responses:
        '200':
          description: Retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/driveItem'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /me/drive:
    get:
      tags:
        - me.drive
      summary: Get personal space for user
      operationId: GetHome
      responses:
        '200':
          description: Retrieved personal space
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/drive'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /me/drive/root:
    get:
      tags:
        - me.drive.root
      summary: Get root from personal space
      operationId: HomeGetRoot
      responses:
        '200':
          description: Retrieved resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/driveItem'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /me/drive/root/children:
    get:
      tags:
        - me.drive.root.children
      summary: Get children from drive
      operationId: HomeGetChildren
      responses:
        '200':
          description: Retrieved resource list
          content:
            application/json:
              schema:
                title: Collection of driveItems
                type: object
                properties:
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/driveItem'
                    maxItems: 100
                  '@odata.nextLink':
                    type: string
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
components:
  schemas:
    drive:
      description: Storage Space. Read-only.
      readOnly: true
      type: object
      properties:
        # entity
        id:
          type: string
          description: Read-only.
          readOnly: true
        # base item
        createdBy:
          $ref: '#/components/schemas/identitySet'
          description: 'Identity of the user, device, or application which created the item. Read-only.'
          readOnly: true
        createdDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time of item creation. Read-only.
          format: date-time
          readOnly: true
        description:
          type: string
          description: Provides a user-visible description of the item. Optional.
          nullable: false
        eTag:
          type: string
          description: ETag for the item. Read-only.
          nullable: false
          readOnly: true
        lastModifiedBy:
          $ref: '#/components/schemas/identitySet'
          description: 'Identity of the user, device, and application which last modified the item. Read-only.'
          nullable: false
          readOnly: true
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time the item was last modified. Read-only.
          format: date-time
          readOnly: true
        name:
          type: string
          description: The name of the item. Read-write.
          nullable: false
        parentReference:
          $ref: '#/components/schemas/itemReference'
          description: 'Parent information, if the item has a parent. Read-write.'
          nullable: false
        webUrl:
          type: string
          description: URL that displays the resource in the browser. Read-only.
          nullable: false
          readOnly: true
        createdByUser:
          $ref: '#/components/schemas/user'
          description: Identity of the user who created the item. Read-only.
          nullable: false
          readOnly: true
        lastModifiedByUser:
          $ref: '#/components/schemas/user'
          description: Identity of the user who last modified the item. Read-only.
          nullable: false
          readOnly: true
        # drive
        driveType:
          type: string
          description: Describes the type of drive represented by this resource. Values are "personal" for users home spaces, "project" or "share". Read-only.
          nullable: false
          readOnly: true
        owner:
          $ref: '#/components/schemas/identitySet'
        quota:
          $ref: '#/components/schemas/quota'
        items:
          type: array
          items:
            $ref: '#/components/schemas/driveItem'
          description: All items contained in the drive. Read-only. Nullable.
          readOnly: true
        root:
          $ref: '#/components/schemas/driveItem'
    identitySet:
      type: object
      description: Optional. User account.
      properties:
        application:
          $ref: '#/components/schemas/identity'
          description: Optional. The application associated with this action.
          nullable: false
        device:
          $ref: '#/components/schemas/identity'
          description: Optional. The device associated with this action.
          nullable: false
        user:
          $ref: '#/components/schemas/identity'
          description: Optional. The user associated with this action.
          nullable: false
    identity:
      type: object
      properties:
        displayName:
          type: string
          description: 'The identity''s display name. Note that this may not always be available or up to date. For example, if a user changes their display name, the API may show the new value in a future response, but the items associated with the user won''t show up as having changed when using delta.'
          nullable: false
        id:
          type: string
          description: Unique identifier for the identity.
    user:
      description: Represents an Active Directory user object.
      type: object
      properties:
        # entity
        id:
          type: string
          description: Read-only.
          readOnly: true
        # directory object
        deletedDateTime:
            pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
            type: string
            format: date-time
            nullable: false
        # user
        accountEnabled:
          type: boolean
          description: 'true if the account is enabled; otherwise, false. This property is required when a user is created. Returned only on $select. Supports $filter.'
          nullable: false
        businessPhones:
          type: array
          items:
            type: string
          description: The telephone numbers for the user. Only one number can be set for this property. Returned by default. Read-only for users synced from on-premises directory.
        city:
          type: string
          description: The city in which the user is located. Returned only on $select. Supports $filter.
          nullable: false
        companyName:
          type: string
          description: The company name which the user is associated. This property can be useful for describing the company that an external user comes from. The maximum length of the company name is 64 characters.Returned only on $select.
          nullable: false
        country:
          type: string
          description: 'The country/region in which the user is located; for example, ''US'' or ''UK''. Returned only on $select. Supports $filter.'
          nullable: false
          maxLength: 3
        createdDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The date and time the user was created. The value cannot be modified and is automatically populated when the entity is created. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. Property is nullable. A null value indicates that an accurate creation time couldn't be determined for the user. Returned only on $select. Read-only. Supports $filter.
          format: date-time
          nullable: false
          readOnly: true
        department:
          type: string
          description: The name for the department in which the user works. Returned only on $select. Supports $filter.
          nullable: false
        displayName:
          type: string
          description: 'The name displayed in the address book for the user. This value is usually the combination of the user''s first name, middle initial, and last name. This property is required when a user is created and it cannot be cleared during updates. Returned by default. Supports $filter and $orderby.'
          nullable: false
        faxNumber:
          type: string
          description: The fax number of the user. Returned only on $select.
          nullable: false
        givenName:
          type: string
          description: The given name (first name) of the user. Returned by default. Supports $filter.
          nullable: false
        lastPasswordChangeDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The time when this user last changed their password. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z Returned only on $select. Read-only.'
          format: date-time
          nullable: false
          readOnly: true
        legalAgeGroupClassification:
          type: string
          description: 'Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated based on ageGroup and consentProvidedForMinor properties. Allowed values: null, minorWithOutParentalConsent, minorWithParentalConsent, minorNoParentalConsentRequired, notAdult and adult. Refer to the legal age group property definitions for further information. Returned only on $select.'
          nullable: false
        mail:
          type: string
          description: 'The SMTP address for the user, for example, ''jeff@contoso.onowncloud.com''. Returned by default. Supports $filter and endsWith.'
          nullable: false
        mailNickname:
          type: string
          description: The mail alias for the user. This property must be specified when a user is created. Returned only on $select. Supports $filter.
          nullable: false
        mobilePhone:
          type: string
          description: The primary cellular telephone number for the user. Returned by default. Read-only for users synced from on-premises directory.
          nullable: false
        officeLocation:
          type: string
          description: The office location in the user's place of business. Returned by default.
          nullable: false
        postalCode:
          type: string
          description: 'The postal code for the user''s postal address. The postal code is specific to the user''s country/region. In the United States of America, this attribute contains the ZIP code. Returned only on $select.'
          nullable: false
        preferredLanguage:
          type: string
          description: The preferred language for the user. Should follow ISO 639-1 Code; for example 'en-US'. Returned by default.
          nullable: false
          pattern: '^[a-z]{2}(-[A-Z]{2})?$'
          maxLength: 7
        state:
          type: string
          description: The state or province in the user's address. Returned only on $select. Supports $filter.
          nullable: false
        streetAddress:
          type: string
          description: The street address of the user's place of business. Returned only on $select.
          nullable: false
        surname:
          type: string
          description: The user's surname (family name or last name). Returned by default. Supports $filter.
          nullable: false
        usageLocation:
          type: string
          description: 'A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries.  Examples include: ''US'', ''JP'', and ''GB''. Not nullable. Returned only on $select. Supports $filter.'
          nullable: false
          maxLength: 3
        userPrincipalName:
          type: string
          description: 'The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user''s email name. The general format is alias@domain, where domain must be present in the tenant''s collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization. Returned by default. Supports $filter, $orderby, and endsWith.'
          nullable: false
        userType:
          type: string
          description: 'A string value that can be used to classify user types in your directory, such as ''Member'' and ''Guest''. Returned only on $select. Supports $filter.'
          nullable: false
        aboutMe:
          type: string
          description: A freeform text entry field for the user to describe themselves. Returned only on $select.
          nullable: false
        birthday:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: 'The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z Returned only on $select.'
          format: date-time
        drive:
          $ref: '#/components/schemas/drive'
        drives:
          type: array
          items:
            $ref: '#/components/schemas/drive'
          description: A collection of drives available for this user. Read-only.
          maxItems: 100
          readOnly: true
    itemReference:
      type: object
      properties:
        driveId:
          type: string
          description: Unique identifier of the drive instance that contains the item. Read-only.
          nullable: false
          readOnly: true
        driveType:
          type: string
          description: 'Identifies the type of drive. See [drive][] resource for values. Read-only.'
          nullable: false
          readOnly: true
        id:
          type: string
          description: Unique identifier of the item in the drive. Read-only.
          nullable: false
          readOnly: true
        name:
          type: string
          description: The name of the item being referenced. Read-only.
          nullable: false
          readOnly: true
        path:
          type: string
          description: Path that can be used to navigate to the item. Read-only.
          nullable: false
          readOnly: true
        shareId:
          type: string
          description: 'A unique identifier for a shared resource that can be accessed via the [Shares][] API.'
          nullable: false
    driveItem:
      description: Reprensents a resource inside a drive. Read-only.
      readOnly: true
      type: object
      properties:
        # entity
        id:
          type: string
          description: Read-only.
          readOnly: true
        # base item
        createdBy:
          $ref: '#/components/schemas/identitySet'
          description: 'Identity of the user, device, or application which created the item. Read-only.'
          readOnly: true
        createdDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time of item creation. Read-only.
          format: date-time
          readOnly: true
        description:
          type: string
          description: Provides a user-visible description of the item. Optional.
          nullable: false
        eTag:
          type: string
          description: ETag for the item. Read-only.
          nullable: false
          readOnly: true
        lastModifiedBy:
          $ref: '#/components/schemas/identitySet'
          description: 'Identity of the user, device, and application which last modified the item. Read-only.'
          nullable: false
          readOnly: true
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: Date and time the item was last modified. Read-only.
          format: date-time
          readOnly: true
        name:
          type: string
          description: The name of the item. Read-write.
          nullable: false
        parentReference:
          $ref: '#/components/schemas/itemReference'
          description: 'Parent information, if the item has a parent. Read-write.'
          nullable: false
        webUrl:
          type: string
          description: URL that displays the resource in the browser. Read-only.
          nullable: false
          readOnly: true
        createdByUser:
          $ref: '#/components/schemas/user'
          description: Identity of the user who created the item. Read-only.
          nullable: false
          readOnly: true
        lastModifiedByUser:
          $ref: '#/components/schemas/user'
          description: Identity of the user who last modified the item. Read-only.
          nullable: false
          readOnly: true
        # driveItem
        content:
          type: string
          description: 'The content stream, if the item represents a file.'
          format: base64url
          nullable: false
        cTag:
          type: string
          description: An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.
          nullable: false
          readOnly: true
        deleted:
          $ref: '#/components/schemas/deleted'
        file:
          $ref: '#/components/schemas/openGraphFile'
        fileSystemInfo:
          $ref: '#/components/schemas/fileSystemInfo'
        folder:
          $ref: '#/components/schemas/folder'
        image:
          $ref: '#/components/schemas/image'
        root:
          $ref: '#/components/schemas/root'
        size:
          type: integer
          description: Size of the item in bytes. Read-only.
          format: int64
          nullable: false
          readOnly: true
        webDavUrl:
          type: string
          description: WebDAV compatible URL for the item. Read-only.
          nullable: false
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/driveItem'
          description: Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
          readOnly: true
    deleted:
      type: object
      description: Information about the deleted state of the item. Read-only.
      readOnly: true
      properties:
        state:
          type: string
          description: Represents the state of the deleted item.
          nullable: false
    openGraphFile:
      type: object
      description: 'File metadata, if the item is a file. Read-only.'
      readOnly: true
      properties:
        hashes:
          $ref: '#/components/schemas/hashes'
        mimeType:
          type: string
          description: The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only.
          nullable: false
          readOnly: true
        processingMetadata:
          type: boolean
          nullable: false
    fileSystemInfo:
      type: object
      description: File system information on client. Read-write.
      properties:
        createdDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time the file was created on a client.
          format: date-time
          nullable: false
        lastAccessedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time the file was last accessed. Available for the recent file list only.
          format: date-time
          nullable: false
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?([Zz]|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          description: The UTC date and time the file was last modified on a client.
          format: date-time
          nullable: false
    folder:
      type: object
      description: 'Folder metadata, if the item is a folder. Read-only.'
      readOnly: true
      properties:
        childCount:
          maximum: 2147483647
          type: integer
          description: Number of children contained immediately within this container.
          format: int32
          nullable: false
        view:
          $ref: '#/components/schemas/folderView'
    image:
      type: object
      description: 'Image metadata, if the item is an image. Read-only.'
      readOnly: true
      properties:
        height:
          maximum: 2147483647
          type: integer
          description: 'Optional. Height of the image, in pixels. Read-only.'
          format: int32
          nullable: false
          readOnly: true
        width:
          maximum: 2147483647
          type: integer
          description: 'Optional. Width of the image, in pixels. Read-only.'
          format: int32
          nullable: false
          readOnly: true
    root:
      type: object
      description: 'If this property is non-null, it indicates that the driveItem is the top-most driveItem in the drive.'
    quota:
      type: object
      description: Optional. Information about the drive's storage space quota. Read-only.
      readOnly: true
      properties:
        deleted:
          type: integer
          description: 'Total space consumed by files in the recycle bin, in bytes. Read-only.'
          format: int64
          nullable: false
          readOnly: true
        remaining:
          type: integer
          description: 'Total space remaining before reaching the quota limit, in bytes. Read-only.'
          format: int64
          nullable: false
          readOnly: true
        state:
          type: string
          description: Enumeration value that indicates the state of the storage space. Read-only.
          nullable: false
          readOnly: true
        total:
          type: integer
          description: 'Total allowed storage space, in bytes. Read-only.'
          format: int64
          nullable: false
          readOnly: true
        used:
          type: integer
          description: 'Total space used, in bytes. Read-only.'
          format: int64
          nullable: false
          readOnly: true
    hashes:
      type: object
      description: 'Hashes of the file''s binary content, if available. Read-only.'
      readOnly: true
      properties:
        crc32Hash:
          type: string
          description: The CRC32 value of the file (if available). Read-only.
          nullable: false
          maxLength: 8
        quickXorHash:
          type: string
          description: A proprietary hash of the file that can be used to determine if the contents of the file have changed (if available). Read-only.
          nullable: false
        sha1Hash:
          type: string
          description: SHA1 hash for the contents of the file (if available). Read-only.
          nullable: false
          maxLength: 40
        sha256Hash:
          type: string
          description: SHA256 hash for the contents of the file (if available). Read-only.
          nullable: false
          maxLength: 160
    folderView:
      type: object
      description: A collection of properties defining the recommended view for the folder.
      properties:
        sortBy:
          type: string
          description: The method by which the folder should be sorted.
          nullable: false
        sortOrder:
          type: string
          description: 'If true, indicates that items should be sorted in descending order. Otherwise, items should be sorted ascending.'
          nullable: false
        viewType:
          type: string
          description: The type of view that should be used to represent the folder.
          nullable: false
    odata.error:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/odata.error.main'
    odata.error.main:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/odata.error.detail'
        innererror:
          type: object
          description: The structure of this object is service-specific
    odata.error.detail:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
  responses:
      error:
        description: error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/odata.error'
  parameters:
    top:
      name: $top
      in: query
      description: Show only the first n items
      schema:
        minimum: 0
        type: integer
      example: 50
    skip:
      name: $skip
      in: query
      description: Skip the first n items
      schema:
        minimum: 0
        type: integer
    search:
      name: $search
      in: query
      description: Search items by search phrases
      schema:
        type: string
    filter:
      name: $filter
      in: query
      description: Filter items by property values
      schema:
        type: string
    count:
      name: $count
      in: query
      description: Include count of items
      schema:
        type: boolean 
  securitySchemes:
      openId:
        type: openIdConnect
        openIdConnectUrl: https://ocis.ocis-traefik.latest.owncloud.works/.well-known/openid-configuration
security:
  - openId: [ ]
